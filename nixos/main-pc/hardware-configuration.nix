# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];
  boot.supportedFilesystems = [ "ntfs" ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/0f760224-c03b-4969-86be-86705faa468f";
      fsType = "btrfs";
      options = [ "subvol=root" "noatime" "compress=zstd:1" "ssd" "discard=async" "space_cache=v2" ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/0f760224-c03b-4969-86be-86705faa468f";
      fsType = "btrfs";
      options = [ "subvol=home" "noatime" "compress=zstd:1" "ssd" "discard=async" "space_cache=v2" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/0f760224-c03b-4969-86be-86705faa468f";
      fsType = "btrfs";
      options = [ "subvol=nix" "noatime" "compress=zstd:1" "ssd" "discard=async" "space_cache=v2" ];
    };

  fileSystems."/var/log" =
    { device = "/dev/disk/by-uuid/0f760224-c03b-4969-86be-86705faa468f";
      fsType = "btrfs";
      options = [ "subvol=log" "noatime" "compress=zstd:1" "ssd" "discard=async" "space_cache=v2" ];
      neededForBoot = true;
    };

  fileSystems."/games" =
    { device = "/dev/disk/by-uuid/0f760224-c03b-4969-86be-86705faa468f";
      fsType = "btrfs";
      options = [ "subvol=games" "noatime" "compress=zstd:1" "ssd" "discard=async" "space_cache=v2" ];
    };

  fileSystems."/.snapshots" =
    { device = "/dev/disk/by-uuid/0f760224-c03b-4969-86be-86705faa468f";
      fsType = "btrfs";
      options = [ "subvol=.snapshots" "noatime" "compress=zstd:1" "ssd" "discard=async" "space_cache=v2" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/37EA-AA00";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" "defaults" ];
    };

  fileSystems."/hdd-drives/toshiba-1tb" =
    { device = "/dev/disk/by-uuid/6f608f83-3f31-4e35-a9ee-46936d45f5e8";
      fsType = "ext4";
    };

  fileSystems."/hdd-drives/linux-files" =
    { device = "/dev/disk/by-uuid/F8827152827115FA";
      fsType = "ntfs-3g";
      options = [ "rw" "uid=1000" ];
    };

  fileSystems."/hdd-drives/Games" =
    { device = "/dev/disk/by-uuid/18C879E7C879C412";
      fsType = "ntfs-3g";
      options = [ "rw" "uid=1000" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/b78a2d5c-a5a7-4545-b5d1-bce814354c54"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp34s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  hardware.graphics = {
    enable = true;
    enable32Bit = true;
    extraPackages = with pkgs; [ rocmPackages.clr.icd amdvlk ];
    extraPackages32 = with pkgs; [ driversi686Linux.amdvlk ];
  };
  
  hardware.amdgpu = {
    opencl.enable = true;
    initrd.enable = true;
    amdvlk = {
      enable = true;
      support32Bit.enable = true;
    };
  };
}
